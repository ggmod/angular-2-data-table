{"version":3,"file":"row.component.js","sourceRoot":"","sources":["../Users/MacAir/Projects/Utilities/datatable/angular-2-data-table/src/components/row.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,sCAEuB;AACvB,qDAA8C;AAC9C,+CAA8C;AAC9C,yCAAwC;AASxC,IAAa,YAAY;IAmDrB,sBAAwD,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;QA9ClE,eAAU,GAAsB,IAAI,mBAAY,EAAE,CAAC;QACnD,qBAAgB,GAAsB,IAAI,mBAAY,EAAE,CAAC;QAQzD,mBAAc,GAAG,IAAI,mBAAY,EAAE,CAAC;QA2CtC,UAAK,GAAG,IAAI,CAAC,CAAC,4DAA4D;IANH,CAAC;IAnChF,sBAAI,kCAAQ;aAAZ;YACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;aAED,UAAa,QAAQ;YACjB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,CAAC;;;OALA;IAOD,QAAQ;IACR,mCAAY,GAAZ,UAAa,GAAG,EAAE,KAAK;QACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,GAAG,KAAA,EAAE,KAAK,OAAA,EAAC,CAAC,CAAC;IACvC,CAAC;IAED,yCAAkB,GAAlB,UAAmB,GAAG,EAAE,KAAK;QACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,GAAG,KAAA,EAAE,KAAK,OAAA,EAAC,CAAC,CAAC;IACvC,CAAC;IAID,sBAAI,sCAAY;QAFhB,SAAS;aAET;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC5B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YAChE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YAC1B,CAAC;QACL,CAAC;;;OAAA;IAED,iCAAU,GAAV;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAClE,CAAC;QACD,MAAM,CAAC,EAAE,CAAC;IACd,CAAC;IAID,kCAAW,GAAX;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAGL,mBAAC;AAAD,CAAC,AA1DD,IA0DC;AAxDY;IAAR,YAAK,EAAE;;0CAAW;AACV;IAAR,YAAK,EAAE;;2CAAe;AAEb;IAAT,aAAM,EAAE;8BAAa,mBAAY;gDAA2B;AACnD;IAAT,aAAM,EAAE;8BAAmB,mBAAY;sDAA2B;AAQzD;IAAT,aAAM,EAAE;;oDAAqC;AAdrC,YAAY;IANxB,gBAAS,CAAC;QACP,QAAQ,EAAE,MAAM,CAAC,EAAE;QACnB,QAAQ,EAAE,gBAAgB;QAC1B,QAAQ,EAAE,2BAAY;QACtB,MAAM,EAAE,CAAC,qBAAS,CAAC;KACtB,CAAC;IAoDe,WAAA,aAAM,CAAC,iBAAU,CAAC,cAAM,OAAA,2BAAS,EAAT,CAAS,CAAC,CAAC,CAAA;qCAAmB,2BAAS;GAnDnE,YAAY,CA0DxB;AA1DY,oCAAY","sourcesContent":["import {\n    Component, Input, Inject, forwardRef, Output, EventEmitter, OnDestroy\n} from '@angular/core';\nimport { DataTable } from './table.component';\nimport { ROW_TEMPLATE } from './row.template';\nimport { ROW_STYLE } from \"./row.style\";\n\n\n@Component({\n    moduleId: module.id,\n    selector: '[dataTableRow]',\n    template: ROW_TEMPLATE,\n    styles: [ROW_STYLE]\n})\nexport class DataTableRow implements OnDestroy {\n\n    @Input() item: any;\n    @Input() index: number;\n\n    @Output() rowClicked: EventEmitter<any> = new EventEmitter();\n    @Output() rowDoubleClicked: EventEmitter<any> = new EventEmitter();\n\n    expanded: boolean;\n\n    // row selection:\n\n    private _selected: boolean;\n\n    @Output() selectedChange = new EventEmitter();\n\n    get selected() {\n        return this._selected;\n    }\n\n    set selected(selected) {\n        this._selected = selected;\n        this.selectedChange.emit(selected);\n    }\n\n    // Emits\n    onRowClicked(row, event) {\n        this.rowClicked.emit({row, event});\n    }\n\n    onRowDoubleClicked(row, event) {\n        this.rowClicked.emit({row, event});\n    }\n\n    // other:\n\n    get displayIndex() {\n        if (this.dataTable.pagination) {\n            return this.dataTable.displayParams.offset + this.index + 1;\n        } else {\n            return this.index + 1;\n        }\n    }\n\n    getTooltip() {\n        if (this.dataTable.rowTooltip) {\n            return this.dataTable.rowTooltip(this.item, this, this.index);\n        }\n        return '';\n    }\n\n    constructor(@Inject(forwardRef(() => DataTable)) public dataTable: DataTable) {}\n\n    ngOnDestroy() {\n        this.selected = false;\n    }\n\n    private _this = this; // FIXME is there no template keyword for this in angular 2?\n}\n"]}